-- MAKE USERS

CREATE TABLE IF NOT EXISTS `bakerydb`.`USER` (
  `USER_ID` INT NOT NULL,
  `USER_PASSWORD` VARCHAR(50) NULL DEFAULT NULL,
  `USER_EMAIL` VARCHAR(150) NULL DEFAULT NULL,
  PRIMARY KEY (`USER_ID`))


insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (1, '07jdju', 'calan@comcast.net');
insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (2, 'rxlWTEGsg2h', 'roanar@gmail.com');
insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (3, 'JtWAtUaS2', 'clyde_palleske@yahoo.com');
insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (4, 'vM4woM1E', 'rborrow0@gmail.com');
insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (5, 'riF4ra0', 'ogreatham@yahoo.com');
insert into USER (USER_ID, USER_PASSWORD, USER_EMAIL) values (6, 'juDkE36', 'kylie_riseley2@icloud.com');

-- MAKE BAKERS

CREATE TABLE IF NOT EXISTS `bakerydb`.`BAKER` (
  `BAKER_ID` INT NOT NULL,
  `BAKER_FNAME` VARCHAR(50) NULL DEFAULT NULL,
  `BAKER_LNAME` VARCHAR(50) NULL DEFAULT NULL,
  `USER_USER_ID` INT NOT NULL,
  PRIMARY KEY (`BAKER_ID`),
  INDEX `fk_BAKER_USER1_idx` (`USER_USER_ID` ASC) VISIBLE,
  CONSTRAINT `fk_BAKER_USER1`
    FOREIGN KEY (`USER_USER_ID`)
    REFERENCES `bakerydb`.`USER` (`USER_ID`))


insert into BAKER (BAKER_ID, BAKER_FNAME, BAKER_LNAME, USER_USER_ID) values (1, 'Catlaina', 'Alan', 1);
insert into BAKER (BAKER_ID, BAKER_FNAME, BAKER_LNAME, USER_USER_ID) values (2, 'Roana', 'Ashtonhurst', 2);
insert into BAKER (BAKER_ID, BAKER_FNAME, BAKER_LNAME, USER_USER_ID) values (3, 'Clyde', 'Palleske', 3);

INSERT INTO USER VALUES (1, 'massey01', 'adrianamassey@oakland.edu');
INSERT INTO BAKER VALUES (01, 'Adriana', 'Massey', 1);
INSERT INTO USER VALUES (2, 'taylor02', 'mgtaylor2@oakland.edu');
INSERT INTO BAKER VALUES (02, 'Matthew', 'Taylor', 2);
INSERT INTO USER VALUES (3, 'mrwade03', 'mwade@oakland.edu');
INSERT INTO BAKER VALUES (03, 'Marisa', 'Wade', 3);


-- MAKE CUSTOMERS

CREATE TABLE IF NOT EXISTS `bakerydb`.`CUSTOMER` (
  `CUSTOMER_ID` INT NOT NULL,
  `CUST_FNAME` VARCHAR(45) NULL DEFAULT NULL,
  `CUST_LNAME` VARCHAR(45) NULL DEFAULT NULL,
  `CUST_PHONE` VARCHAR(11) NULL DEFAULT NULL,
  `CUST_EMAIL` VARCHAR(150) NULL DEFAULT NULL,
  `CUST_PAYMENT` VARCHAR(40) NULL DEFAULT NULL,
  `USER_USER_ID` INT NULL DEFAULT NULL,
  `ORDERS_ORDER_ID` INT NULL DEFAULT NULL,
  PRIMARY KEY (`CUSTOMER_ID`),
  INDEX `fk_CUSTOMER_USER1_idx` (`USER_USER_ID` ASC) VISIBLE,
  INDEX `fk_CUSTOMER_ORDERS1_idx` (`ORDERS_ORDER_ID` ASC) VISIBLE,
  CONSTRAINT `fk_CUSTOMER_ORDERS1`
    FOREIGN KEY (`ORDERS_ORDER_ID`)
    REFERENCES `bakerydb`.`ORDERS` (`ORDER_ID`),
  CONSTRAINT `fk_CUSTOMER_USER1`
    FOREIGN KEY (`USER_USER_ID`)
    REFERENCES `bakerydb`.`USER` (`USER_ID`))


insert into CUSTOMER (CUSTOMER_ID, CUST_FNAME, CUST_LNAME, CUST_PHONE, CUST_EMAIL, CUST_PAYMENT, USER_ID) values (1, 'Rosy', 'Borrow', '555 210 5170', 'rborrow0@gmail.com', 'mastercard', 4);
insert into CUSTOMER (CUSTOMER_ID, CUST_FNAME, CUST_LNAME, CUST_PHONE, CUST_EMAIL, CUST_PAYMENT, USER_ID) values (2, 'Olive', 'Greatham', '555 502 7300', 'ogreatham@yahoo.com', 'visa', 5);
insert into CUSTOMER (CUSTOMER_ID, CUST_FNAME, CUST_LNAME, CUST_PHONE, CUST_EMAIL, CUST_PAYMENT, USER_ID) values (3, 'Kylie', 'Riseley', '555 758 7991', 'kylie_riseley2@icloud.com', 'mastercard', 6);

INSERT INTO USER VALUES (10, 'ilovecake5', 'tommysmith123@gmail.com');
INSERT INTO CUSTOMER VALUES (1010, 'Tommy', 'Smith', '2485532651', 'tommysmith123@gmail.com', 'Visa',  10, 104);
INSERT INTO USER VALUES (11, 'voternmbr8', 'mspolitician58@hotmail.com');
INSERT INTO CUSTOMER VALUES (1011, 'Amanda', 'Porter', '2072697532', 'mspolitician58@hotmail.com', 'American Express',  11, 102);
INSERT INTO USER VALUES (12, 'spooky123', 'halloweenqueen31@gmail.com');
INSERT INTO CUSTOMER VALUES (1012, 'Cindy', 'Richard', '5042556912', 'halloweenqueen31@gmail.com', 'Cash',  12, 100);






-- MAKE MENU ITEMS

CREATE TABLE IF NOT EXISTS `bakerydb`.`MENU_ITEM` (
  `ITEM_ID` INT NOT NULL,
  `ITEM_NAME` VARCHAR(50) NULL DEFAULT NULL,
  `ITEM_PRICE` DECIMAL(4,2) NULL DEFAULT NULL,
  `ITEM_DESCRIPTION` VARCHAR(250) NULL DEFAULT NULL,
  PRIMARY KEY (`ITEM_ID`))


INSERT INTO MENU_ITEM (ITEM_ID, ITEM_NAME, ITEM_PRICE, ITEM_DESCRIPTION) VALUES (1, 'Double Chocolate Cake', 9.99, 'Amazing Chocolate Cake');
INSERT INTO MENU_ITEM (ITEM_ID, ITEM_NAME, ITEM_PRICE, ITEM_DESCRIPTION) VALUES (2, 'Fancy Pink Cake', 19.99, 'Pink Cake with Fancy Icing');
INSERT INTO MENU_ITEM (ITEM_ID, ITEM_NAME, ITEM_PRICE, ITEM_DESCRIPTION) VALUES (3, 'Upside Down Ice Cream Cone Cake', 12.99, 'Ice Cream Cone inspired Cake');



-- MAKE ORDERS
-- made a  default order id 0 for really old day to know would be incorrect

CREATE TABLE IF NOT EXISTS `bakerydb`.`ORDERS` (
  `ORDER_ID` INT NOT NULL,
  `ORDER_DATE` DATETIME NULL DEFAULT NULL,
  `ORDER_PICKUP_DATE` DATETIME NULL DEFAULT NULL,
  `ORDER_NOTES` VARCHAR(250) NULL DEFAULT NULL,
  `FINAL_PRICE` DECIMAL(5,2) NULL DEFAULT NULL,
  `STATUS_STATUS_ID` INT NULL DEFAULT NULL,
  PRIMARY KEY (`ORDER_ID`),
  INDEX `fk_ORDERS_STATUS_idx` (`STATUS_STATUS_ID` ASC) VISIBLE,
  CONSTRAINT `fk_ORDERS_STATUS`
    FOREIGN KEY (`STATUS_STATUS_ID`)
    REFERENCES `bakerydb`.`STATUS` (`STATUS_ID`))


INSERT INTO ORDERS(ORDER_ID, ORDER_DATE, ORDER_PICKUP_DATE, ORDER_NOTES, FINAL_PRICE, STATUS_STATUS_ID) VALUES (1, '2022-12-01', '2022-12-02', 'Please add Name to Cake', 12.99, 1);


-- SET ORDERS TO VALID CUSTOMERS

UPDATE CUSTOMER SET ORDERS_ORDER_ID = 1 WHERE USER_USER_ID = 5 ;



-- MAKE VALID STATUS FOR ORDERS TO BE IN

CREATE TABLE IF NOT EXISTS `bakerydb`.`STATUS` (
  `STATUS_ID` INT NOT NULL,
  `STATUS_NAME` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`STATUS_ID`))


INSERT INTO STATUS(STATUS_ID, STATUS_NAME) VALUES (0, 'Incomplete Order');
INSERT INTO STATUS(STATUS_ID, STATUS_NAME) VALUES (1, 'Order In Progress');
INSERT INTO STATUS(STATUS_ID, STATUS_NAME) VALUES (2, 'Ready for Pickup');
INSERT INTO STATUS(STATUS_ID, STATUS_NAME) VALUES (3, 'Order Complete');


-- MAKE ITEMS_ORDERED


CREATE TABLE IF NOT EXISTS `bakerydb`.`ITEMS_ORDERED` (
  `ITEM_QUANTITY` INT NULL DEFAULT NULL,
  `PRICE_TOTAL` DECIMAL(5,2) NULL DEFAULT NULL,
  `MENU_ITEM_ITEM_ID` INT NOT NULL,
  `ORDERS_ORDER_ID` INT NOT NULL,
  INDEX `fk_ITEMS_ORDERED_MENU_ITEM1_idx` (`MENU_ITEM_ITEM_ID` ASC) VISIBLE,
  INDEX `fk_ITEMS_ORDERED_ORDERS1_idx` (`ORDERS_ORDER_ID` ASC) VISIBLE,
  CONSTRAINT `fk_ITEMS_ORDERED_MENU_ITEM1`
    FOREIGN KEY (`MENU_ITEM_ITEM_ID`)
    REFERENCES `bakerydb`.`MENU_ITEM` (`ITEM_ID`),
  CONSTRAINT `fk_ITEMS_ORDERED_ORDERS1`
    FOREIGN KEY (`ORDERS_ORDER_ID`)
    REFERENCES `bakerydb`.`ORDERS` (`ORDER_ID`))
